# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: ðŸ›  Build & Publish Docker Image
    runs-on: ubuntu-latest
    # expose the image name for other jobs
    outputs:
      image_name: ${{ steps.set-image.outputs.image_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/graduate:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/graduate:${{ github.sha }}

      - name: Set image name output
        id: set-image
        run: echo "image_name=${{ secrets.DOCKERHUB_USERNAME }}/graduate:latest" >> $GITHUB_OUTPUT

  deploy-to-ec2:
    name: ðŸš€ Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add EC2 host to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy container on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/graduate:latest

            # Stop & remove old container
            docker stop graduate || true
            docker rm   graduate || true

            # Run new container with your env file
            docker run -d --name graduate \
              -p 8080:8080 \
              --env-file /home/${{ secrets.EC2_USER }}/bzun.env \
              ${{ secrets.DOCKERHUB_USERNAME }}/graduate:latest

            # Show the last 20 log lines
            docker logs --tail 20 graduate
          EOF
